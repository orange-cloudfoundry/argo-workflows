# script templates provide a way to run arbitrary snippets of code
# in any language, to produce a output "result" via the standard out
# of the template. Results can then be referenced using the variable,
# {{steps.<stepname>.outputs.result}}, and used as parameter to other
# templates, and in 'when', and 'withParam' clauses.
# This example demonstrates the use of a bash shell script to
# generate a random number which is printed in the next step.
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: scripts-bash-
spec:
  entrypoint: bash-script-example
  templates:
  - name: bash-script-example
    steps:
    - - name: generate
        template: gen-random-int
    - - name: print
        template: print-message
        arguments:
          parameters:
          - name: message
            value: "{{steps.generate.outputs.result}}"

  - name: gen-random-int
    script:
      image: debian:9.4
      command: [bash]
      source: |
        cat /dev/urandom | od -N2 -An -i | awk -v f=1 -v r=100 '{printf "%i\n", f + r * $1 / 65536}'

  - name: print-message-with-color
    inputs:
      parameters:
        - name: message
    script:
      image: debian:9.4
      command: [bash]
      source: |
        #--- Colors and styles
        export GREEN='\033[1;32m'
        export YELLOW='\033[1;33m'
        export ORANGE='\033[0;33m'
        export RED='\033[1;31m'
        export STD='\033[0m'
        export BOLD='\033[1m'
        export REVERSE='\033[7m'
        
        printf "echo result was: {{inputs.parameters.message}} with %b colored text %b\n" "${YELLOW}" "${STD}"

  - name: print-message
    inputs:
      parameters:
      - name: message
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["echo result was: {{inputs.parameters.message}}"]

